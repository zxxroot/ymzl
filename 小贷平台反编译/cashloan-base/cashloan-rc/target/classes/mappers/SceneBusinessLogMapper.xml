<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- cl_rc_scene_business表:场景与第三方征信接口关联关系接口执行认知 -->
<mapper namespace="com.rongdu.cashloan.rc.mapper.SceneBusinessLogMapper">
	<resultMap type="com.rongdu.cashloan.rc.domain.SceneBusinessLog" id="baseResultMap">
		<id column="id" property="id" jdbcType="BIGINT" />
        <result column="scene_id" property="sceneId" jdbcType="BIGINT" />
        <result column="borrow_id" property="borrowId" jdbcType="BIGINT" />
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="tpp_id" property="tppId" jdbcType="BIGINT" />
        <result column="business_id" property="businessId" jdbcType="BIGINT" />
        <result column="nid" property="nid" jdbcType="VARCHAR" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
        <result column="type" property="type" jdbcType="VARCHAR" />
        <result column="rs_state" property="rsState" jdbcType="VARCHAR" />
        <result column="rs_desc" property="rsDesc" jdbcType="VARCHAR" />
        <result column="phone" property="phone" jdbcType="VARCHAR" />
	</resultMap>

	<!--基本的sql查询字段 公共引用...-->
    <sql id="base_column_list">
        id,scene_id,borrow_id,user_id,tpp_id,business_id,nid,create_time,update_time,type,rs_state,rs_desc,phone 
    </sql>
    
    <!--关联sql查询字段-->
    <sql id="join_column_list">
        l.id,l.scene_id,l.borrow_id,l.user_id,l.tpp_id,l.business_id,l.nid,l.create_time,l.update_time,l.type,l.rs_state,l.rs_desc,b.scene,l.phone
    </sql>
    
    <insert id="save" parameterType="com.rongdu.cashloan.rc.domain.SceneBusinessLog" keyProperty="id" useGeneratedKeys="true">
        insert into cl_rc_scene_business_log(scene_id,borrow_id,user_id,tpp_id,business_id,nid,create_time,update_time,type,rs_state,rs_desc,phone)values(#{sceneId,jdbcType=BIGINT},#{borrowId,jdbcType=BIGINT},#{userId,jdbcType=BIGINT},#{tppId,jdbcType=INTEGER},#{businessId,jdbcType=BIGINT},#{nid,jdbcType=VARCHAR},#{createTime,jdbcType=TIMESTAMP},#{updateTime,jdbcType=TIMESTAMP},#{type,jdbcType=VARCHAR},#{rsState,jdbcType=VARCHAR},#{rsDesc,jdbcType=VARCHAR},#{phone,jdbcType=VARCHAR})
    </insert>
    
    <!-- 基本的sql查询条件公共引用 -->
    <sql id="searchBy">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id !=null ">
                id  = #{id,jdbcType=BIGINT}
            </if>
            <if test=" sceneId !=null ">
                and scene_id = #{sceneId,jdbcType=BIGINT}
            </if>
            <if test=" borrowId !=null ">
                and borrow_id = #{borrowId,jdbcType=BIGINT}
            </if>
            <if test=" userId !=null ">
                and user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test=" tppId !=null ">
                and tpp_id = #{tppId,jdbcType=BIGINT}
            </if>
            <if test="businessId !=null">
                and business_id = #{businessId,jdbcType=BIGINT}
            </if>
            <if test="nid !='' and nid !=null">
                and nid = #{nid,jdbcType=VARCHAR}
            </if>
            <if test="phone !='' and phone !=null">
                and phone = #{phone,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>
    
    <select id="findSelective" resultMap="baseResultMap" parameterType="java.util.HashMap">
        select
        <include refid="base_column_list" />
        from cl_rc_scene_business_log
        <include refid="searchBy"/>
    </select>
    
	<update id="update" parameterType="com.rongdu.cashloan.rc.domain.SceneBusinessLog">
		update cl_rc_scene_business_log 
		<set>
			<if test=" rsState != '' and rsState != null">
				rs_state = #{rsState,jdbcType=VARCHAR},
			</if>
			<if test=" rsDesc != '' and rsDesc != null">
				rs_desc = #{rsDesc,jdbcType=VARCHAR},
			</if>
			<if test=" updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test=" phone != '' and phone != null">
				phone = #{phone,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	 <!-- 查询参数配置 -->
    <sql id="search">
        <trim prefix="where" prefixOverrides="and|or">
            <if test=" id !=null ">
                l.id  = #{id,jdbcType=BIGINT}
            </if>
            <if test=" sceneId !=null ">
                and  l.scene_id = #{sceneId,jdbcType=BIGINT}
            </if>
            <if test=" borrowId !=null ">
                and  l.borrow_id = #{borrowId,jdbcType=BIGINT}
            </if>
            <if test=" userId !=null ">
                and  l.user_id = #{userId,jdbcType=BIGINT}
            </if>
            <if test=" tppId !=null ">
                and  l.tpp_id = #{tppId,jdbcType=BIGINT}
            </if>
            <if test="businessId !=null">
                and  l.business_id = #{businessId,jdbcType=BIGINT}
            </if>
            <if test="nid !='' and nid !=null">
                and  l.nid = #{nid,jdbcType=VARCHAR}
            </if>
            <if test="scene != null and scene != '' ">        
                and  b.scene = #{scene,jdbcType=VARCHAR}                
            </if>
            <if test="rsState != null and rsState != ''">
				and ( l.rs_state is null or  l.rs_state = '' or  l.rs_state = '0')
            </if>
            <if test=" phone !=null  and phone !=null">
                and  l.phone = #{phone,jdbcType=VARCHAR}
            </if>
        </trim>
    </sql>
	
	<!-- 查询未完成的（失败的/需要重新执行的）记录数 -->
	<select id="countUnFinishLog" parameterType="com.rongdu.cashloan.rc.domain.SceneBusinessLog" resultType="int">
		 select count(1) from cl_rc_scene_business_log l LEFT JOIN cl_rc_scene_business b ON l.scene_id = b.id
		 <include refid="search"/>
	</select>
	
	<!-- 查询未完成的（失败的/需要重新执行的）记录 -->
	<select id="findSceneLogUnFinish" parameterType="com.rongdu.cashloan.rc.domain.SceneBusinessLog" resultMap="baseResultMap">
		select <include refid="join_column_list" /> from cl_rc_scene_business_log l LEFT JOIN cl_rc_scene_business b ON l.scene_id = b.id
		<include refid="search"/>
	</select>
	
	<select id="findLastExcute" resultType="com.rongdu.cashloan.rc.domain.SceneBusinessLog">
		select <include refid="base_column_list" /> from cl_rc_scene_business_log 
		where user_id = #{userId,jdbcType=BIGINT} and business_id = #{busId,jdbcType=BIGINT} ORDER BY create_time DESC LIMIT 1
	</select>
	
	<select id="findLastExcuteByPhone" resultType="com.rongdu.cashloan.rc.domain.SceneBusinessLog">
		select <include refid="base_column_list" /> from cl_rc_scene_business_log 
		where phone = #{phone,jdbcType=VARCHAR} and business_id = #{busId,jdbcType=BIGINT} ORDER BY create_time DESC LIMIT 1
	</select>
	
	<delete id="deleteByUserId" parameterType="java.lang.Long">
		delete from cl_rc_scene_business_log where user_id =#{userId,jdbcType=BIGINT}
	</delete>
	
    <delete id="deleteByPhone" parameterType="java.lang.String">
		delete from cl_rc_scene_business_log where phone =#{phone,jdbcType=VARCHAR}
	</delete>
</mapper>